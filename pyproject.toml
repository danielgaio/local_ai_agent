[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "local-ai-agent"
version = "0.1.0"
description = "Local RAG-powered motorcycle recommender with LLM and vector store"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Daniel Gaio"}
]
dependencies = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pandas>=2.3.3",
    "chromadb>=0.3.26",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-core>=0.1.0",
    "langchain-openai>=0.0.3",
    "langchain-ollama>=0.0.3",
    "langchain-chroma>=0.0.3",
    "ollama>=0.1.0",
    "openai>=1.12.0",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | env
  | venv
  | chroma_langchain_db
)/
'''

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10+
target-version = "py310"

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "env",
    "chroma_langchain_db",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Add isort (`I`), pydocstyle (`D`), and more.
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from inside except
    "C901",  # too complex (function is too complex)
    "W191",  # indentation contains tabs
    "E203",  # whitespace before ':' (conflicts with black)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Ignore import violations in __init__.py files
"__init__.py" = ["F401", "E402"]
# Ignore docstring requirements in tests
"tests/**/*.py" = ["D"]

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
    "env",
    ".venv",
    "chroma_langchain_db",
]
skips = [
    "B101",  # assert_used - we use asserts in tests
    "B601",  # paramiko_calls - not applicable
]
